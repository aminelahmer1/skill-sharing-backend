services:

  livekit:
    image: livekit/livekit-server:v1.7.2
    container_name: livekit-server
    ports:
      - "7880:7880"     # HTTP/WebSocket
      - "7881:7881/udp" # RTP/UDP
      - "7882:7882"     # RTP/TCP
      - "50000-50100:50000-50100/udp"
    environment:
      - LIVEKIT_PORT=7880
      - LIVEKIT_BIND_ADDRESSES=0.0.0.0
      - LIVEKIT_RTC_UDP_PORT=7881
      - LIVEKIT_RTC_PORT_RANGE_START=50000
      - LIVEKIT_RTC_PORT_RANGE_END=50100
      - LIVEKIT_REDIS_ADDRESS=redis:6379
      - "LIVEKIT_KEYS=testkey: akQ2cFd4OEx0UDlyWmU3MnNZcTNtWGZOdEE0a1Z1MTIzCg=="
      - LIVEKIT_DEVELOPMENT=true
      - LIVEKIT_ANNOUNCE_IP=host.docker.internal
      - LIVEKIT_ALLOWED_ORIGINS=http://localhost:4200,ws://localhost:4200
      - LIVEKIT_TURN_ENABLED=true
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - skillsharing-net
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7880/rtc/validate" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
  redis:
    image: redis:7-alpine
    container_name: livekit-redis
    command: redis-server --save 60 1 --loglevel warning --appendonly yes
    ports:
      - "6379:6379"
    networks:
      - skillsharing-net
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  postgresql:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - skillsharing-net
    restart: unless-stopped

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - skillsharing-net
    restart: unless-stopped


  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    restart: unless-stopped
    ports:
      - "9411:9411"
    networks:
      - skillsharing-net




  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - skillsharing-net
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - skillsharing-net

  mail-dev:
    container_name: ms-mail-dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025

  keycloak:
    container_name: keycloak-ms
    image: quay.io/keycloak/keycloak:24.0.2
    ports:
      - 9098:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    networks:
      - skillsharing-net
    command:
      - "start-dev"



networks:
  skillsharing-net:
    driver: bridge


volumes:
  postgres:
  pgadmin:
  mongo:
  redis_data:
server:
  port: 8084
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/SkillSharing_Exchange
    username: postgres
    password: admin
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9098/realms/skill-sharing
          jwk-set-uri: http://localhost:9098/realms/skill-sharing/protocol/openid-connect/certs
  # Configuration WebSocket
  websocket:
    allowed-origins: "http://localhost:4200" # Autorise les connexions depuis votre frontend
  # Configuration Firebase

  firebase:
    credentials:
      location: firebase-service-account.json

keycloak:
  auth-server-url: http://localhost:9098
  realm: skill-sharing
  client-id: backend-service
  client-secret: wqKaJixE2KzSlyB7wIBqnS4DI3wQJKrz
  admin-client-id: admin-cli
  admin-username: admin
  admin-password: admin

application:
  config:
    user-url: http://localhost:8822/api/v1/users
    skill-url: http://localhost:8822/api/v1/skills
    # Configuration des notifications
    notification:
      websocket:
        endpoint: /ws
        broker-prefix: /topic
        app-prefix: /app


  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    template:
      default-topic: notifications

  instance:
    prefer-ip-address: true
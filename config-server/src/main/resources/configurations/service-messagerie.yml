server:
  port: 8086

spring:
  application:
    name: service-messagerie

  datasource:
    url: jdbc:postgresql://localhost:5432/SkillSharing_Messaging
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:admin}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9098/realms/skill-sharing
          jwk-set-uri: http://localhost:9098/realms/skill-sharing/protocol/openid-connect/certs

  cache:
    type: simple
    cache-names: userIds

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB


eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.value}

application:
  config:
    user-url: ${USER_SERVICE_URL:http://localhost:8081/api/v1/users}
    skill-url: ${SKILL_SERVICE_URL:http://localhost:8050/api/v1/skills}
    exchange-url: ${EXCHANGE_SERVICE_URL:http://localhost:8084/api/v1/exchanges}

logging:
  level:
    root: INFO
    com.example.servicemessagerie: DEBUG
    org.springframework.messaging: DEBUG
    org.springframework.web.socket: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.cors: DEBUG  # Pour d√©boguer les CORS

file:
  upload-dir: ./message-uploads
  max-size: 10MB

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
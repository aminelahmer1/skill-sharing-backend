server:
  port: 8040

spring:
  application:
    name: notification-service
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins: "http://localhost:4200"
            allowed-methods: "*"
            allowed-headers: "*"
            allow-credentials: true
            exposed-headers: "Authorization"

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9098/realms/skill-sharing
          jwk-set-uri: http://localhost:9098/realms/skill-sharing/protocol/openid-connect/certs

  datasource:
    url: jdbc:postgresql://localhost:5432/SkillSharing_Notifications
    username: postgres
    password: admin
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true


  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.value.default.type: com.example.notification.dto.NotificationEvent
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.use.type.headers: false
        spring.json.type.mapping: "event:com.example.notification.dto.NotificationEvent"
  mail:
    host: smtp.gmail.com
    port: 587
    username: contact.skillsharing@gmail.com
    password: ielc sgww ljpc besx
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enabled: true
            required: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000
        debug: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

keycloak:
  auth-server-url: http://localhost:9098
  realm: skill-sharing
  client-id: backend-service
  client-secret: ifUlRmmtEfu02d80iz06MroNHC5kVuKf

logging:
  level:
    root: INFO
    org.springframework: INFO
    org.springframework.mail: DEBUG
    org.springframework.kafka: DEBUG
    com.example.notification: DEBUG
  file:
    name: logs/notification-service.log

notification:
  websocket:
    endpoint: /ws

application:
  config:
    skill-url: ${SKILL_SERVICE_URL:http://localhost:8822/api/v1/skills}
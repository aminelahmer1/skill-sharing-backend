spring:
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins: "http://localhost:4200"
            allowed-methods: "*"
            allowed-headers: "*"
            allow-credentials: true
            exposed-headers: "Authorization"
      discovery:
        locator:
          enabled: true

      routes:
        - id: service-user
          uri: lb://SERVICE-USER
          predicates:
            - Path=/api/v1/users/**
          filters:
            - TokenRelay

        - id: service-skill
          uri: lb://SERVICE-SKILL
          predicates:
            - Path=/api/v1/skills/**,/api/v1/categories/**
          filters:
            - TokenRelay

        - id: service-exchange
          uri: lb://SERVICE-EXCHANGE
          predicates:
            - Path=/api/v1/exchanges/**
          filters:
            - TokenRelay

        - id: service-user-uploads
          uri: lb://SERVICE-USER
          predicates:
            - Path=/uploads/**
          filters:
            - RewritePath=/uploads/(?<segment>.*), /uploads/${segment}

        - id: service-skill-uploads
          uri: lb://SERVICE-SKILL
          predicates:
            - Path=/skill-uploads/**
          filters:
            - RewritePath=/skill-uploads/(?<segment>.*), /skill-uploads/${segment}

        - id: notification-service-http
          uri: lb://notification-service
          predicates:
            - Path=/api/v1/notifications/**
          filters:
            - TokenRelay

        - id: notification-service-websocket
          uri: lb://notification-service
          predicates:
            - Path=/ws/notifications/**
          filters:
            -  RewritePath=/ws/notifications, /ws/notifications
        - id: service-livestream-http
          uri: lb://SERVICE-LIVESTREAM
          predicates:
            - Path=/api/v1/livestream/**
          filters:
            - TokenRelay
            - RewritePath=/api/v1/livestream/(?<segment>.*), /api/v1/livestream/$\{segment}

              # Livestream WebSocket endpoint
        - id: service-livestream-websocket
          uri: lb://SERVICE-LIVESTREAM
          predicates:
            - Path=/ws/livestream/**
          filters:
            - RewritePath=/ws/livestream/(?<segment>.*), /ws/$\{segment}

  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9098/realms/skill-sharing
          jwk-set-uri: http://localhost:9098/realms/skill-sharing/protocol/openid-connect/certs

keycloak:
  auth-server-url: http://localhost:9098
  realm: skill-sharing
  client-id: backend-service
  client-secret: ifUlRmmtEfu02d80iz06MroNHC5kVuKf

server:
  port: 8822

notification:
  websocket:
    endpoint: /ws

livekit:
  url: ws://localhost:7880
  api-key: testkey
  api-secret: akQ2cFd4OEx0UDlyWmU3MnNZcTNtWGZOdEE0a1Z1MTIzCg==
  server-url: http://localhost:7880
  cors:
    allowed_origins:
      - "http://localhost:4200"
    allowed_headers:
      - "*"
    allowed_methods:
      - "*"
    rtc:
      tcp_port: 7880
      udp_port: 7880
      port_range_start: 0
      port_range_end: 0
  room:
    max-participants: 50
    empty-timeout: 300
    max-duration: 3600
  token:
    ttl: 86400 # 24 heures en secondes
    publisher-ttl: 172800 # 48 heures pour les publishers
  recording:
    enabled: true
    storage-path: ./recordings
    max-size: 1GB
    format: mp4
